# -*- coding: utf-8 -*-
"""Aula 5 - pandas_final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DGSE6QPRozPDSXc7PkZObJPSa0G-54Ss
"""

#importando as bibliotecas e setando os estilos dos gráficos
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use('seaborn')

df = pd.read_excel('/content/drive/MyDrive/Estudos/Cursos/Python/Análise Exploratória/datasets/AdventureWorks.xlsx')

#Criando DataFrame
df = pd.read_excel('AdventureWorks.xlsx')

df.head()

df.shape

df.dtypes

#Qual foi a receita toal?
df['Valor Venda'].sum()

#Craindo uma coluna para custo
df['Custo'] = df['Custo Unitário'].mul(df['Quantidade'])

df.head(1)

#Qual custo total (arrendodando o valor com round e colocando em duas casas decimais)?
round(df['Custo'].sum(),2)

#Achando o lucro total (Lucro = receita - custo)
df['Lucro'] = df['Valor Venda'] - df['Custo']

df.head(1)

#Achando o lucro total
round(df['Lucro'].sum(),2)

#Qual tempo do envio do produto?
df['Intervalo'] = df['Data Envio'] - df['Data Venda']

df.head(1)



"""**Média do tempo de envio de cada Marca**"""

#Extraindo apenas os dias
df['Tempo_envio'] = (df['Data Envio'] - df['Data Venda']).dt.days

df.head(1)

#Verificando o tipo da coluna Tempo_envio
df['Tempo_envio'].dtypes

#Média do tempo de envio por Marca
df.groupby('Marca')['Tempo_envio'].mean()

#Verificando se temos dados faltantes
df.isnull().sum()

"""**O lucro por ano e por marca**"""

#Agrupando por ano e por marca
df.groupby([df['Data Venda'].dt.year, 'Marca'])['Lucro'].sum()

#Configurando o formato da notação em float
pd.options.display.float_format = '{:20,.2f}'.format

#Resentando o index e formantando em forma colunar
lucro_ano = df.groupby([df['Data Venda'].dt.year, 'Marca'])['Lucro'].sum().reset_index()
lucro_ano

#Qual o total de produtos vendidos?
df.groupby('Produto')['Quantidade'].sum().sort_values(ascending=False)

df.groupby('Produto')['Quantidade'].sum().sort_values(ascending=False).plot.barh(title='Total Produtos Vendidos')
plt.xlabel('Total')
plt.ylabel('Produto')

df.groupby(df['Data Venda'].dt.year)['Lucro'].sum().plot.bar(title='Lucro x Ano')
plt.xlabel('Ano')
plt.ylabel('Receita')

#Selecionado apenas as vendas de 2009
df_2009 = df[df['Data Venda'].dt.year == 2009]
df_2009.head()

#Lucro por mês
df_2009.groupby(df_2009['Data Venda'].dt.month)['Lucro'].sum().plot(title='Lucro x Mês')
plt.xlabel('Mês')
plt.ylabel('Lucro')

#Lucro por marca, quando usa plt.xticks(rotation='horizontal') a legenda fica na horizontal
df_2009.groupby('Marca')['Lucro'].sum().plot.bar(title='Lucro x Marca')
plt.xlabel('Marca')
plt.ylabel('Lucro')
plt.xticks(rotation='horizontal')

#Lucro por marca
df_2009.groupby('Classe')['Lucro'].sum().plot.bar(title='Lucro x Classe')
plt.xlabel('Marca')
plt.ylabel('Lucro')
plt.xticks(rotation='horizontal')

df['Tempo_envio'].describe()

#Histograma
plt.hist(df['Tempo_envio'])

#Filtrando um isolado (outlier)
df[df['Tempo_envio']==20]

#Salvando como arquivo csv
df.to_csv('df_vendas_novo.csv', index=False)

